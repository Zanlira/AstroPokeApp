---
import type { GetStaticPaths } from "astro";
import type { Pokemonlistresponse } from "../../interfaces/pokemonList.response";

import MainLayout from "../../layouts/MainLayout.astro";
import PokemonCard from "../../components/pokemons/pokemonCard.astro";

export const getStaticPaths = (async () => {
  const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  if (!response.ok) {
    throw new Error("Failed to fetch Pokemon data");
  }
  const pokemons = (await response.json()) as Pokemonlistresponse;
  const pokemonList = pokemons.results;
  const paths = pokemonList.map((pokemon) => {
    const id = pokemon.url.split("/").slice(-2, -1)[0];
    return {
      params: { name: pokemon.name },
      props: { name: pokemon.name, id },
    };
  });
  return paths;
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { id } = Astro.props;

const pokemondataResponse = await fetch(
  `https://pokeapi.co/api/v2/pokemon/${id}`
);
if (!pokemondataResponse.ok) {
  throw new Error("Failed to fetch Pokemon data");
}
const pokemonData = await pokemondataResponse.json();

const audioUrl = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const shinyspriteUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/shiny/${id}.png`;
---

<MainLayout title={`Pokedex | ${name}`}>
  <a href="/">back</a>
  <section class="mt-10 mx-10 flex flex-col items-center justify-center">
    <div>
      <h1 class="text-3xl capitalize font-bold">{name}</h1>
    </div>
    <PokemonCard name={name} id={id} />

    <audio controls class="mt-4">
      <source src={audioUrl} type="audio/ogg" />
      Your browser does not support the audio element.
    </audio>
    <img src={shinyspriteUrl} alt="Shiny Pokemon sprite" class="w-32 h-32 mt-4" />
  </section>
  
</MainLayout>

<section class="mt-10 mx-10 flex flex-col items-center justify-center">
  <card class="bg-slate-700 p-4 rounded-lg shadow-lg">
    <h2 class="text-2xl font-bold">Stats</h2>
    <ul class="list-disc pl-5">
      {
        pokemonData.stats.map((stat: { stat: { name: string }, base_stat: number }) => (
          <li>
            {stat.stat.name}: {stat.base_stat}
          </li>
        ))
      }
    </ul>
  </card>
  <section class="mt-10 mx-10 flex flex-col items-center justify-center">
    <card class="bg-slate-700 p-4 rounded-lg shadow-lg">
      <h2 class="text-2xl font-bold">Abilities</h2>
      <ul class="list-disc pl-5">
        {
          pokemonData.abilities.map((ability: { ability: { name: string } }) => (
            <li>{ability.ability.name}</li>
          ))
        }
      </ul>
    </card>
    <section class="mt-10 mx-10 flex flex-col items-center justify-center">
      <card class="bg-slate-700 p-4 rounded-lg shadow-lg">
        <h2 class="text-2xl font-bold">Tipos</h2>
        <ul class="list-disc pl-5">
          {pokemonData.types.map((tipo: { type: { name: string } }) => <li>{tipo.type.name}</li>)}
        </ul>
      </card>
    </section>
  </section>
</section>
